// Generated by CoffeeScript 1.3.3
(function() {
  var Exemplar;

  Exemplar = require('./exemplar');

  describe('exemplar', function() {
    var e;
    e = void 0;
    beforeEach(function() {
      e = new Exemplar;
      return this.addMatchers({
        toAccept: function(o) {
          return this.actual.check(o);
        }
      });
    });
    it('by default, should consider anything valid without an example', function() {
      return expect(e).toAccept({
        foo: 'bar'
      });
    });
    it('should accept a simple type', function() {
      e.addExample({
        foo: 1
      });
      expect(e).toAccept({
        foo: 2
      });
      return expect(e).not.toAccept({
        foo: 'bar'
      });
    });
    it('should accept an array type by its member types', function() {
      e.addExample({
        foo: ['bar', 'baz']
      });
      expect(e).toAccept({
        foo: ['hi', 'bye']
      });
      return expect(e).not.toAccept({
        foo: [1, 2]
      });
    });
    return it('should accept all nested object types as equal', function() {
      e.addExample({
        foo: {
          boo: 'bar'
        }
      });
      expect(e).toAccept({
        foo: {
          boo: 'baz'
        }
      });
      return expect(e).toAccept({
        foo: {
          boo: 3
        }
      });
    });
  });

}).call(this);
